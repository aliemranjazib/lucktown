///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ProfileDataResponseCountryList {
/*
{
  "country_id": "1",
  "name": "Malaysia",
  "code": "MYR",
  "icon_url": "https://suncity.s3.ap-southeast-1.amazonaws.com/country/MYR-flag.png",
  "status": "active",
  "is_playable": "1",
  "created_at": "2021-12-23 16:54:00",
  "updated_at": null
} 
*/

  String? countryId;
  String? name;
  String? code;
  String? iconUrl;
  String? status;
  String? isPlayable;
  String? createdAt;
  String? updatedAt;

  ProfileDataResponseCountryList({
    this.countryId,
    this.name,
    this.code,
    this.iconUrl,
    this.status,
    this.isPlayable,
    this.createdAt,
    this.updatedAt,
  });
  ProfileDataResponseCountryList.fromJson(Map<String, dynamic> json) {
    countryId = json['country_id']?.toString();
    name = json['name']?.toString();
    code = json['code']?.toString();
    iconUrl = json['icon_url']?.toString();
    status = json['status']?.toString();
    isPlayable = json['is_playable']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['country_id'] = countryId;
    data['name'] = name;
    data['code'] = code;
    data['icon_url'] = iconUrl;
    data['status'] = status;
    data['is_playable'] = isPlayable;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    return data;
  }
}

class ProfileDataResponseTopUpMethodList {
/*
{
  "setting_id": "2",
  "code": "topup_manual",
  "value": "active",
  "type": "select",
  "group": "topup"
} 
*/

  String? settingId;
  String? code;
  String? value;
  String? type;
  String? group;

  ProfileDataResponseTopUpMethodList({
    this.settingId,
    this.code,
    this.value,
    this.type,
    this.group,
  });
  ProfileDataResponseTopUpMethodList.fromJson(Map<String, dynamic> json) {
    settingId = json['setting_id']?.toString();
    code = json['code']?.toString();
    value = json['value']?.toString();
    type = json['type']?.toString();
    group = json['group']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['setting_id'] = settingId;
    data['code'] = code;
    data['value'] = value;
    data['type'] = type;
    data['group'] = group;
    return data;
  }
}

class ProfileDataResponseAccounts {
/*
{
  "id": "77",
  "member_id": "21",
  "bank_id": "1",
  "account_number": "2",
  "account_name": "R",
  "created_at": "2022-10-13 08:00:36",
  "updated_at": "2022-10-13 08:00:36",
  "bank_name": "Affin Bank",
  "bank_country": "1",
  "bank_type": "cash",
  "bank_icon_url": "https://suncity.s3.ap-southeast-1.amazonaws.com/bank/affin.png"
} 
*/

  String? id;
  String? memberId;
  String? bankId;
  String? accountNumber;
  String? accountName;
  String? createdAt;
  String? updatedAt;
  String? bankName;
  String? bankCountry;
  String? bankType;
  String? bankIconUrl;

  ProfileDataResponseAccounts({
    this.id,
    this.memberId,
    this.bankId,
    this.accountNumber,
    this.accountName,
    this.createdAt,
    this.updatedAt,
    this.bankName,
    this.bankCountry,
    this.bankType,
    this.bankIconUrl,
  });
  ProfileDataResponseAccounts.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    memberId = json['member_id']?.toString();
    bankId = json['bank_id']?.toString();
    accountNumber = json['account_number']?.toString();
    accountName = json['account_name']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    bankName = json['bank_name']?.toString();
    bankCountry = json['bank_country']?.toString();
    bankType = json['bank_type']?.toString();
    bankIconUrl = json['bank_icon_url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['member_id'] = memberId;
    data['bank_id'] = bankId;
    data['account_number'] = accountNumber;
    data['account_name'] = accountName;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['bank_name'] = bankName;
    data['bank_country'] = bankCountry;
    data['bank_type'] = bankType;
    data['bank_icon_url'] = bankIconUrl;
    return data;
  }
}

class ProfileDataResponseTopUpBankList {
/*
{
  "topup_bank_id": "61",
  "topup_bank_name": "RHB Bank",
  "topup_bank_account_number": "20141900035902",
  "topup_bank_created_datetime": "2021-06-09 02:34:50",
  "topup_bank_account_name": "SOO BEDSHEETS ENTERPRISE",
  "topup_bank_status": "active",
  "topup_bank_icon_url": "https://suncity.s3.ap-southeast-1.amazonaws.com/bank/rhb.png",
  "topup_bank_remarks": "RHB7",
  "topup_bank_country": "1",
  "topup_bank_qrcode_url": null,
  "topup_bank_qrcode_status": null
} 
*/

  String? topupBankId;
  String? topupBankName;
  String? topupBankAccountNumber;
  String? topupBankCreatedDatetime;
  String? topupBankAccountName;
  String? topupBankStatus;
  String? topupBankIconUrl;
  String? topupBankRemarks;
  String? topupBankCountry;
  String? topupBankQrcodeUrl;
  String? topupBankQrcodeStatus;

  ProfileDataResponseTopUpBankList({
    this.topupBankId,
    this.topupBankName,
    this.topupBankAccountNumber,
    this.topupBankCreatedDatetime,
    this.topupBankAccountName,
    this.topupBankStatus,
    this.topupBankIconUrl,
    this.topupBankRemarks,
    this.topupBankCountry,
    this.topupBankQrcodeUrl,
    this.topupBankQrcodeStatus,
  });
  ProfileDataResponseTopUpBankList.fromJson(Map<String, dynamic> json) {
    topupBankId = json['topup_bank_id']?.toString();
    topupBankName = json['topup_bank_name']?.toString();
    topupBankAccountNumber = json['topup_bank_account_number']?.toString();
    topupBankCreatedDatetime = json['topup_bank_created_datetime']?.toString();
    topupBankAccountName = json['topup_bank_account_name']?.toString();
    topupBankStatus = json['topup_bank_status']?.toString();
    topupBankIconUrl = json['topup_bank_icon_url']?.toString();
    topupBankRemarks = json['topup_bank_remarks']?.toString();
    topupBankCountry = json['topup_bank_country']?.toString();
    topupBankQrcodeUrl = json['topup_bank_qrcode_url']?.toString();
    topupBankQrcodeStatus = json['topup_bank_qrcode_status']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['topup_bank_id'] = topupBankId;
    data['topup_bank_name'] = topupBankName;
    data['topup_bank_account_number'] = topupBankAccountNumber;
    data['topup_bank_created_datetime'] = topupBankCreatedDatetime;
    data['topup_bank_account_name'] = topupBankAccountName;
    data['topup_bank_status'] = topupBankStatus;
    data['topup_bank_icon_url'] = topupBankIconUrl;
    data['topup_bank_remarks'] = topupBankRemarks;
    data['topup_bank_country'] = topupBankCountry;
    data['topup_bank_qrcode_url'] = topupBankQrcodeUrl;
    data['topup_bank_qrcode_status'] = topupBankQrcodeStatus;
    return data;
  }
}

class ProfileDataResponseGameTransactions {
/*
{
  "transaction_id": "46816199",
  "game_transaction_valid_stake": "0.2500",
  "transaction_number": "LKYSLOT-K3Lkm1668245003",
  "transaction_remarks": "LKY SLOT",
  "transaction_created_datetime": "2022-11-12 17:22:55",
  "product_image_url": "https://imagedelivery.net/8F4PR10vncj5Q6UoH8dlPg/e1486328-e130-49a4-5827-dcca6bd5f100/public",
  "transaction_amount": "-0.2500"
} 
*/

  String? transactionId;
  String? gameTransactionValidStake;
  String? transactionNumber;
  String? transactionRemarks;
  String? transactionCreatedDatetime;
  String? productImageUrl;
  String? transactionAmount;

  ProfileDataResponseGameTransactions({
    this.transactionId,
    this.gameTransactionValidStake,
    this.transactionNumber,
    this.transactionRemarks,
    this.transactionCreatedDatetime,
    this.productImageUrl,
    this.transactionAmount,
  });
  ProfileDataResponseGameTransactions.fromJson(Map<String, dynamic> json) {
    transactionId = json['transaction_id']?.toString();
    gameTransactionValidStake =
        json['game_transaction_valid_stake']?.toString();
    transactionNumber = json['transaction_number']?.toString();
    transactionRemarks = json['transaction_remarks']?.toString();
    transactionCreatedDatetime =
        json['transaction_created_datetime']?.toString();
    productImageUrl = json['product_image_url']?.toString();
    transactionAmount = json['transaction_amount']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['transaction_id'] = transactionId;
    data['game_transaction_valid_stake'] = gameTransactionValidStake;
    data['transaction_number'] = transactionNumber;
    data['transaction_remarks'] = transactionRemarks;
    data['transaction_created_datetime'] = transactionCreatedDatetime;
    data['product_image_url'] = productImageUrl;
    data['transaction_amount'] = transactionAmount;
    return data;
  }
}

class ProfileDataResponseWalletTransactionsJsonClickDetailsJsonText {
/*
{
  "Currency": "THB",
  "Type": "GameInRefund",
  "Desc": "Member Deposit Failed credit to JDBFISHSystem Auto Refund",
  "Date/Time": "2022-11-20 15:44:10"
} 
*/

  String? Currency;
  String? Type;
  String? Desc;
  String? DateTime;

  ProfileDataResponseWalletTransactionsJsonClickDetailsJsonText({
    this.Currency,
    this.Type,
    this.Desc,
    this.DateTime,
  });
  ProfileDataResponseWalletTransactionsJsonClickDetailsJsonText.fromJson(
      Map<String, dynamic> json) {
    Currency = json['Currency']?.toString();
    Type = json['Type']?.toString();
    Desc = json['Desc']?.toString();
    DateTime = json['Date/Time']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['Currency'] = Currency;
    data['Type'] = Type;
    data['Desc'] = Desc;
    data['Date/Time'] = DateTime;
    return data;
  }
}

class ProfileDataResponseWalletTransactionsJsonClickDetails {
/*
{
  "transactionNumber": "GF221120034410883560",
  "transactionAmount": "0.00",
  "transactionTitle": "LuckyTown",
  "transactionImage": "https://xxyyzz112233.s3-ap-southeast-1.amazonaws.com/product/luckytown_logo.png",
  "jsonText": {
    "Currency": "THB",
    "Type": "GameInRefund",
    "Desc": "Member Deposit Failed credit to JDBFISHSystem Auto Refund",
    "Date/Time": "2022-11-20 15:44:10"
  },
  "detailJson": null
} 
*/

  String? transactionNumber;
  String? transactionAmount;
  String? transactionTitle;
  String? transactionImage;
  ProfileDataResponseWalletTransactionsJsonClickDetailsJsonText? jsonText;
  String? detailClick;
  String? detailJson;

  ProfileDataResponseWalletTransactionsJsonClickDetails({
    this.transactionNumber,
    this.transactionAmount,
    this.transactionTitle,
    this.transactionImage,
    this.jsonText,
    this.detailClick,
    this.detailJson,
  });
  ProfileDataResponseWalletTransactionsJsonClickDetails.fromJson(
      Map<String, dynamic> json) {
    transactionNumber = json['transactionNumber']?.toString();
    transactionAmount = json['transactionAmount']?.toString();
    transactionTitle = json['transactionTitle']?.toString();
    transactionImage = json['transactionImage']?.toString();
    jsonText = (json['jsonText'] != null)
        ? ProfileDataResponseWalletTransactionsJsonClickDetailsJsonText
            .fromJson(json['jsonText'])
        : null;
    detailClick = json['detailClick']?.toString();
    detailJson = json['detailJson']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['transactionNumber'] = transactionNumber;
    data['transactionAmount'] = transactionAmount;
    data['transactionTitle'] = transactionTitle;
    data['transactionImage'] = transactionImage;
    if (jsonText != null) {
      data['jsonText'] = jsonText!.toJson();
    }
    data['detailClick'] = detailClick;
    data['detailJson'] = detailJson;
    return data;
  }
}

class ProfileDataResponseWalletTransactions {
/*
{
  "transaction_id": "1104643",
  "transaction_amount": "0.00",
  "transaction_amount_previous": "0.00",
  "transaction_amount_balance": "0.00",
  "transaction_type": "gameInRefund",
  "wallet_id": "25663",
  "transaction_status": "active",
  "transaction_created_datetime": "2022-11-20 15:44:10",
  "transaction_remark": "Member Deposit Failed credit to JDBFISHSystem Auto Refund",
  "transaction_method": "Manual",
  "withdraw_status": null,
  "withdraw_update_datetime": null,
  "transaction_number": "GF221120034410883560",
  "transaction_unique_key": "nwCqO5G7qVO454kuY0fejb87rXAEwcZkwQErFS9qVCww4AzRsYfEns8QjPDlnVWjGYgTiizPbz2Ca806JKxGKynwKmVs8MZl3horbxT9xN3WHHw3Gr7OhmdnuLwGXpoIXzB5V3w4VkhtIjgHD1IB5Hvu7nKVSGEUyBaPhgXdoWK2gWydr7cDDuNbDFfFrn6o2V6oVyz7",
  "member_product_id": null,
  "transaction_money_type": "money",
  "transfer_fromto_member_id": null,
  "transfer_fromto_member_name": null,
  "transfer_fromto_shareholder_id": null,
  "transfer_fromto_shareholder_name": null,
  "done_by_admin_name": null,
  "done_by_admin_id": null,
  "done_by_shareholder_id": null,
  "done_by_shareholder_name": null,
  "done_by_member_id": null,
  "done_by_member_name": null,
  "transaction_account_date": null,
  "transaction_flow_type": null,
  "withdraw_bank_id": null,
  "coin_transaction_id": null,
  "transaction_currency": "THB",
  "topup_bank_name": null,
  "topup_bank_account_number": null,
  "topup_bank_remarks": null,
  "topup_bank_holder": null,
  "withdraw_bank_account_id": null,
  "transaction_product_id": null,
  "withdraw_usdt_rate": null,
  "withdraw_usdt_amount": null,
  "product_id": null,
  "transaction_exchange_rate": null,
  "transaction_exchange_from": null,
  "transaction_exchange_to": null,
  "transaction_amount_base": null,
  "product_image_url": "https://xxyyzz112233.s3-ap-southeast-1.amazonaws.com/product/luckytown_logo.png",
  "transfer_fromto_member_avatar_url": null,
  "product_name": "LuckyTown",
  "transaction_owner": "Techtest",
  "jsonClickDetails": {
    "transactionNumber": "GF221120034410883560",
    "transactionAmount": "0.00",
    "transactionTitle": "LuckyTown",
    "transactionImage": "https://xxyyzz112233.s3-ap-southeast-1.amazonaws.com/product/luckytown_logo.png",
    "jsonText": {
      "Currency": "THB",
      "Type": "GameInRefund",
      "Desc": "Member Deposit Failed credit to JDBFISHSystem Auto Refund",
      "Date/Time": "2022-11-20 15:44:10"
    },
    "detailClick": "false",
    "detailJson": null
  }
} 
*/

  String? transactionId;
  String? transactionAmount;
  String? transactionAmountPrevious;
  String? transactionAmountBalance;
  String? transactionType;
  String? walletId;
  String? transactionStatus;
  String? transactionCreatedDatetime;
  String? transactionRemark;
  String? transactionMethod;
  String? withdrawStatus;
  String? withdrawUpdateDatetime;
  String? transactionNumber;
  String? transactionUniqueKey;
  String? memberProductId;
  String? transactionMoneyType;
  String? transferFromtoMemberId;
  String? transferFromtoMemberName;
  String? transferFromtoShareholderId;
  String? transferFromtoShareholderName;
  String? doneByAdminName;
  String? doneByAdminId;
  String? doneByShareholderId;
  String? doneByShareholderName;
  String? doneByMemberId;
  String? doneByMemberName;
  String? transactionAccountDate;
  String? transactionFlowType;
  String? withdrawBankId;
  String? coinTransactionId;
  String? transactionCurrency;
  String? topupBankName;
  String? topupBankAccountNumber;
  String? topupBankRemarks;
  String? topupBankHolder;
  String? withdrawBankAccountId;
  String? transactionProductId;
  String? withdrawUsdtRate;
  String? withdrawUsdtAmount;
  String? productId;
  String? transactionExchangeRate;
  String? transactionExchangeFrom;
  String? transactionExchangeTo;
  String? transactionAmountBase;
  String? productImageUrl;
  String? transferFromtoMemberAvatarUrl;
  String? productName;
  String? transactionOwner;
  ProfileDataResponseWalletTransactionsJsonClickDetails? jsonClickDetails;

  ProfileDataResponseWalletTransactions({
    this.transactionId,
    this.transactionAmount,
    this.transactionAmountPrevious,
    this.transactionAmountBalance,
    this.transactionType,
    this.walletId,
    this.transactionStatus,
    this.transactionCreatedDatetime,
    this.transactionRemark,
    this.transactionMethod,
    this.withdrawStatus,
    this.withdrawUpdateDatetime,
    this.transactionNumber,
    this.transactionUniqueKey,
    this.memberProductId,
    this.transactionMoneyType,
    this.transferFromtoMemberId,
    this.transferFromtoMemberName,
    this.transferFromtoShareholderId,
    this.transferFromtoShareholderName,
    this.doneByAdminName,
    this.doneByAdminId,
    this.doneByShareholderId,
    this.doneByShareholderName,
    this.doneByMemberId,
    this.doneByMemberName,
    this.transactionAccountDate,
    this.transactionFlowType,
    this.withdrawBankId,
    this.coinTransactionId,
    this.transactionCurrency,
    this.topupBankName,
    this.topupBankAccountNumber,
    this.topupBankRemarks,
    this.topupBankHolder,
    this.withdrawBankAccountId,
    this.transactionProductId,
    this.withdrawUsdtRate,
    this.withdrawUsdtAmount,
    this.productId,
    this.transactionExchangeRate,
    this.transactionExchangeFrom,
    this.transactionExchangeTo,
    this.transactionAmountBase,
    this.productImageUrl,
    this.transferFromtoMemberAvatarUrl,
    this.productName,
    this.transactionOwner,
    this.jsonClickDetails,
  });
  ProfileDataResponseWalletTransactions.fromJson(Map<String, dynamic> json) {
    transactionId = json['transaction_id']?.toString();
    transactionAmount = json['transaction_amount']?.toString();
    transactionAmountPrevious = json['transaction_amount_previous']?.toString();
    transactionAmountBalance = json['transaction_amount_balance']?.toString();
    transactionType = json['transaction_type']?.toString();
    walletId = json['wallet_id']?.toString();
    transactionStatus = json['transaction_status']?.toString();
    transactionCreatedDatetime =
        json['transaction_created_datetime']?.toString();
    transactionRemark = json['transaction_remark']?.toString();
    transactionMethod = json['transaction_method']?.toString();
    withdrawStatus = json['withdraw_status']?.toString();
    withdrawUpdateDatetime = json['withdraw_update_datetime']?.toString();
    transactionNumber = json['transaction_number']?.toString();
    transactionUniqueKey = json['transaction_unique_key']?.toString();
    memberProductId = json['member_product_id']?.toString();
    transactionMoneyType = json['transaction_money_type']?.toString();
    transferFromtoMemberId = json['transfer_fromto_member_id']?.toString();
    transferFromtoMemberName = json['transfer_fromto_member_name']?.toString();
    transferFromtoShareholderId =
        json['transfer_fromto_shareholder_id']?.toString();
    transferFromtoShareholderName =
        json['transfer_fromto_shareholder_name']?.toString();
    doneByAdminName = json['done_by_admin_name']?.toString();
    doneByAdminId = json['done_by_admin_id']?.toString();
    doneByShareholderId = json['done_by_shareholder_id']?.toString();
    doneByShareholderName = json['done_by_shareholder_name']?.toString();
    doneByMemberId = json['done_by_member_id']?.toString();
    doneByMemberName = json['done_by_member_name']?.toString();
    transactionAccountDate = json['transaction_account_date']?.toString();
    transactionFlowType = json['transaction_flow_type']?.toString();
    withdrawBankId = json['withdraw_bank_id']?.toString();
    coinTransactionId = json['coin_transaction_id']?.toString();
    transactionCurrency = json['transaction_currency']?.toString();
    topupBankName = json['topup_bank_name']?.toString();
    topupBankAccountNumber = json['topup_bank_account_number']?.toString();
    topupBankRemarks = json['topup_bank_remarks']?.toString();
    topupBankHolder = json['topup_bank_holder']?.toString();
    withdrawBankAccountId = json['withdraw_bank_account_id']?.toString();
    transactionProductId = json['transaction_product_id']?.toString();
    withdrawUsdtRate = json['withdraw_usdt_rate']?.toString();
    withdrawUsdtAmount = json['withdraw_usdt_amount']?.toString();
    productId = json['product_id']?.toString();
    transactionExchangeRate = json['transaction_exchange_rate']?.toString();
    transactionExchangeFrom = json['transaction_exchange_from']?.toString();
    transactionExchangeTo = json['transaction_exchange_to']?.toString();
    transactionAmountBase = json['transaction_amount_base']?.toString();
    productImageUrl = json['product_image_url']?.toString();
    transferFromtoMemberAvatarUrl =
        json['transfer_fromto_member_avatar_url']?.toString();
    productName = json['product_name']?.toString();
    transactionOwner = json['transaction_owner']?.toString();
    jsonClickDetails = (json['jsonClickDetails'] != null)
        ? ProfileDataResponseWalletTransactionsJsonClickDetails.fromJson(
            json['jsonClickDetails'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['transaction_id'] = transactionId;
    data['transaction_amount'] = transactionAmount;
    data['transaction_amount_previous'] = transactionAmountPrevious;
    data['transaction_amount_balance'] = transactionAmountBalance;
    data['transaction_type'] = transactionType;
    data['wallet_id'] = walletId;
    data['transaction_status'] = transactionStatus;
    data['transaction_created_datetime'] = transactionCreatedDatetime;
    data['transaction_remark'] = transactionRemark;
    data['transaction_method'] = transactionMethod;
    data['withdraw_status'] = withdrawStatus;
    data['withdraw_update_datetime'] = withdrawUpdateDatetime;
    data['transaction_number'] = transactionNumber;
    data['transaction_unique_key'] = transactionUniqueKey;
    data['member_product_id'] = memberProductId;
    data['transaction_money_type'] = transactionMoneyType;
    data['transfer_fromto_member_id'] = transferFromtoMemberId;
    data['transfer_fromto_member_name'] = transferFromtoMemberName;
    data['transfer_fromto_shareholder_id'] = transferFromtoShareholderId;
    data['transfer_fromto_shareholder_name'] = transferFromtoShareholderName;
    data['done_by_admin_name'] = doneByAdminName;
    data['done_by_admin_id'] = doneByAdminId;
    data['done_by_shareholder_id'] = doneByShareholderId;
    data['done_by_shareholder_name'] = doneByShareholderName;
    data['done_by_member_id'] = doneByMemberId;
    data['done_by_member_name'] = doneByMemberName;
    data['transaction_account_date'] = transactionAccountDate;
    data['transaction_flow_type'] = transactionFlowType;
    data['withdraw_bank_id'] = withdrawBankId;
    data['coin_transaction_id'] = coinTransactionId;
    data['transaction_currency'] = transactionCurrency;
    data['topup_bank_name'] = topupBankName;
    data['topup_bank_account_number'] = topupBankAccountNumber;
    data['topup_bank_remarks'] = topupBankRemarks;
    data['topup_bank_holder'] = topupBankHolder;
    data['withdraw_bank_account_id'] = withdrawBankAccountId;
    data['transaction_product_id'] = transactionProductId;
    data['withdraw_usdt_rate'] = withdrawUsdtRate;
    data['withdraw_usdt_amount'] = withdrawUsdtAmount;
    data['product_id'] = productId;
    data['transaction_exchange_rate'] = transactionExchangeRate;
    data['transaction_exchange_from'] = transactionExchangeFrom;
    data['transaction_exchange_to'] = transactionExchangeTo;
    data['transaction_amount_base'] = transactionAmountBase;
    data['product_image_url'] = productImageUrl;
    data['transfer_fromto_member_avatar_url'] = transferFromtoMemberAvatarUrl;
    data['product_name'] = productName;
    data['transaction_owner'] = transactionOwner;
    if (jsonClickDetails != null) {
      data['jsonClickDetails'] = jsonClickDetails!.toJson();
    }
    return data;
  }
}

class ProfileDataResponseOrderTransactions {
/*
{
  "topup_id": "44734",
  "wallet_id": "25663",
  "topup_amount": "50.00",
  "topup_amount_previous": "0.00",
  "topup_amount_balance": "50.00",
  "topup_datetime": "2022-11-14 13:40:57",
  "update_datetime": null,
  "topup_status": "pending",
  "promo_id": null,
  "topup_receipt_url": "1",
  "topup_remarks": null,
  "topup_bank_id": "1",
  "topup_number": "DIRECT221114014057731080",
  "topup_type": "bank",
  "done_by_admin_id": null,
  "done_by_admin_name": null,
  "topup_direct_param": null,
  "topup_direct_response": null,
  "topup_unique_key": null,
  "topup_original_amount": null,
  "topup_conversion_rate": null,
  "topup_service_charge": null,
  "topup_owner_name": null,
  "topup_method": null,
  "topup_receipt": null,
  "transaction_datetime": "2022-11-14 13:40:57",
  "topupBankName": null,
  "topupBankNo": null,
  "topupBank": null,
  "transaction_currency": "THB"
} 
*/

  String? topupId;
  String? walletId;
  String? topupAmount;
  String? topupAmountPrevious;
  String? topupAmountBalance;
  String? topupDatetime;
  String? updateDatetime;
  String? topupStatus;
  String? promoId;
  String? topupReceiptUrl;
  String? topupRemarks;
  String? topupBankId;
  String? topupNumber;
  String? topupType;
  String? doneByAdminId;
  String? doneByAdminName;
  String? topupDirectParam;
  String? topupDirectResponse;
  String? topupUniqueKey;
  String? topupOriginalAmount;
  String? topupConversionRate;
  String? topupServiceCharge;
  String? topupOwnerName;
  String? topupMethod;
  String? topupReceipt;
  String? transactionDatetime;
  String? topupBankName;
  String? topupBankNo;
  String? topupBank;
  String? transactionCurrency;

  ProfileDataResponseOrderTransactions({
    this.topupId,
    this.walletId,
    this.topupAmount,
    this.topupAmountPrevious,
    this.topupAmountBalance,
    this.topupDatetime,
    this.updateDatetime,
    this.topupStatus,
    this.promoId,
    this.topupReceiptUrl,
    this.topupRemarks,
    this.topupBankId,
    this.topupNumber,
    this.topupType,
    this.doneByAdminId,
    this.doneByAdminName,
    this.topupDirectParam,
    this.topupDirectResponse,
    this.topupUniqueKey,
    this.topupOriginalAmount,
    this.topupConversionRate,
    this.topupServiceCharge,
    this.topupOwnerName,
    this.topupMethod,
    this.topupReceipt,
    this.transactionDatetime,
    this.topupBankName,
    this.topupBankNo,
    this.topupBank,
    this.transactionCurrency,
  });
  ProfileDataResponseOrderTransactions.fromJson(Map<String, dynamic> json) {
    topupId = json['topup_id']?.toString();
    walletId = json['wallet_id']?.toString();
    topupAmount = json['topup_amount']?.toString();
    topupAmountPrevious = json['topup_amount_previous']?.toString();
    topupAmountBalance = json['topup_amount_balance']?.toString();
    topupDatetime = json['topup_datetime']?.toString();
    updateDatetime = json['update_datetime']?.toString();
    topupStatus = json['topup_status']?.toString();
    promoId = json['promo_id']?.toString();
    topupReceiptUrl = json['topup_receipt_url']?.toString();
    topupRemarks = json['topup_remarks']?.toString();
    topupBankId = json['topup_bank_id']?.toString();
    topupNumber = json['topup_number']?.toString();
    topupType = json['topup_type']?.toString();
    doneByAdminId = json['done_by_admin_id']?.toString();
    doneByAdminName = json['done_by_admin_name']?.toString();
    topupDirectParam = json['topup_direct_param']?.toString();
    topupDirectResponse = json['topup_direct_response']?.toString();
    topupUniqueKey = json['topup_unique_key']?.toString();
    topupOriginalAmount = json['topup_original_amount']?.toString();
    topupConversionRate = json['topup_conversion_rate']?.toString();
    topupServiceCharge = json['topup_service_charge']?.toString();
    topupOwnerName = json['topup_owner_name']?.toString();
    topupMethod = json['topup_method']?.toString();
    topupReceipt = json['topup_receipt']?.toString();
    transactionDatetime = json['transaction_datetime']?.toString();
    topupBankName = json['topupBankName']?.toString();
    topupBankNo = json['topupBankNo']?.toString();
    topupBank = json['topupBank']?.toString();
    transactionCurrency = json['transaction_currency']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['topup_id'] = topupId;
    data['wallet_id'] = walletId;
    data['topup_amount'] = topupAmount;
    data['topup_amount_previous'] = topupAmountPrevious;
    data['topup_amount_balance'] = topupAmountBalance;
    data['topup_datetime'] = topupDatetime;
    data['update_datetime'] = updateDatetime;
    data['topup_status'] = topupStatus;
    data['promo_id'] = promoId;
    data['topup_receipt_url'] = topupReceiptUrl;
    data['topup_remarks'] = topupRemarks;
    data['topup_bank_id'] = topupBankId;
    data['topup_number'] = topupNumber;
    data['topup_type'] = topupType;
    data['done_by_admin_id'] = doneByAdminId;
    data['done_by_admin_name'] = doneByAdminName;
    data['topup_direct_param'] = topupDirectParam;
    data['topup_direct_response'] = topupDirectResponse;
    data['topup_unique_key'] = topupUniqueKey;
    data['topup_original_amount'] = topupOriginalAmount;
    data['topup_conversion_rate'] = topupConversionRate;
    data['topup_service_charge'] = topupServiceCharge;
    data['topup_owner_name'] = topupOwnerName;
    data['topup_method'] = topupMethod;
    data['topup_receipt'] = topupReceipt;
    data['transaction_datetime'] = transactionDatetime;
    data['topupBankName'] = topupBankName;
    data['topupBankNo'] = topupBankNo;
    data['topupBank'] = topupBank;
    data['transaction_currency'] = transactionCurrency;
    return data;
  }
}

class ProfileDataResponse {
/*
{
  "orderTransactions": [
    {
      "topup_id": "44734",
      "wallet_id": "25663",
      "topup_amount": "50.00",
      "topup_amount_previous": "0.00",
      "topup_amount_balance": "50.00",
      "topup_datetime": "2022-11-14 13:40:57",
      "update_datetime": null,
      "topup_status": "pending",
      "promo_id": null,
      "topup_receipt_url": "1",
      "topup_remarks": null,
      "topup_bank_id": "1",
      "topup_number": "DIRECT221114014057731080",
      "topup_type": "bank",
      "done_by_admin_id": null,
      "done_by_admin_name": null,
      "topup_direct_param": null,
      "topup_direct_response": null,
      "topup_unique_key": null,
      "topup_original_amount": null,
      "topup_conversion_rate": null,
      "topup_service_charge": null,
      "topup_owner_name": null,
      "topup_method": null,
      "topup_receipt": null,
      "transaction_datetime": "2022-11-14 13:40:57",
      "topupBankName": null,
      "topupBankNo": null,
      "topupBank": null,
      "transaction_currency": "THB"
    }
  ],
  "walletTransactions": [
    {
      "transaction_id": "1104643",
      "transaction_amount": "0.00",
      "transaction_amount_previous": "0.00",
      "transaction_amount_balance": "0.00",
      "transaction_type": "gameInRefund",
      "wallet_id": "25663",
      "transaction_status": "active",
      "transaction_created_datetime": "2022-11-20 15:44:10",
      "transaction_remark": "Member Deposit Failed credit to JDBFISHSystem Auto Refund",
      "transaction_method": "Manual",
      "withdraw_status": null,
      "withdraw_update_datetime": null,
      "transaction_number": "GF221120034410883560",
      "transaction_unique_key": "nwCqO5G7qVO454kuY0fejb87rXAEwcZkwQErFS9qVCww4AzRsYfEns8QjPDlnVWjGYgTiizPbz2Ca806JKxGKynwKmVs8MZl3horbxT9xN3WHHw3Gr7OhmdnuLwGXpoIXzB5V3w4VkhtIjgHD1IB5Hvu7nKVSGEUyBaPhgXdoWK2gWydr7cDDuNbDFfFrn6o2V6oVyz7",
      "member_product_id": null,
      "transaction_money_type": "money",
      "transfer_fromto_member_id": null,
      "transfer_fromto_member_name": null,
      "transfer_fromto_shareholder_id": null,
      "transfer_fromto_shareholder_name": null,
      "done_by_admin_name": null,
      "done_by_admin_id": null,
      "done_by_shareholder_id": null,
      "done_by_shareholder_name": null,
      "done_by_member_id": null,
      "done_by_member_name": null,
      "transaction_account_date": null,
      "transaction_flow_type": null,
      "withdraw_bank_id": null,
      "coin_transaction_id": null,
      "transaction_currency": "THB",
      "topup_bank_name": null,
      "topup_bank_account_number": null,
      "topup_bank_remarks": null,
      "topup_bank_holder": null,
      "withdraw_bank_account_id": null,
      "transaction_product_id": null,
      "withdraw_usdt_rate": null,
      "withdraw_usdt_amount": null,
      "product_id": null,
      "transaction_exchange_rate": null,
      "transaction_exchange_from": null,
      "transaction_exchange_to": null,
      "transaction_amount_base": null,
      "product_image_url": "https://xxyyzz112233.s3-ap-southeast-1.amazonaws.com/product/luckytown_logo.png",
      "transfer_fromto_member_avatar_url": null,
      "product_name": "LuckyTown",
      "transaction_owner": "Techtest",
      "jsonClickDetails": {
        "transactionNumber": "GF221120034410883560",
        "transactionAmount": "0.00",
        "transactionTitle": "LuckyTown",
        "transactionImage": "https://xxyyzz112233.s3-ap-southeast-1.amazonaws.com/product/luckytown_logo.png",
        "jsonText": {
          "Currency": "THB",
          "Type": "GameInRefund",
          "Desc": "Member Deposit Failed credit to JDBFISHSystem Auto Refund",
          "Date/Time": "2022-11-20 15:44:10"
        },
        "detailClick": "false",
        "detailJson": null
      }
    }
  ],
  "gameTransactions": [
    {
      "transaction_id": "46816199",
      "game_transaction_valid_stake": "0.2500",
      "transaction_number": "LKYSLOT-K3Lkm1668245003",
      "transaction_remarks": "LKY SLOT",
      "transaction_created_datetime": "2022-11-12 17:22:55",
      "product_image_url": "https://imagedelivery.net/8F4PR10vncj5Q6UoH8dlPg/e1486328-e130-49a4-5827-dcca6bd5f100/public",
      "transaction_amount": "-0.2500"
    }
  ],
  "topUpBankList": [
    {
      "topup_bank_id": "61",
      "topup_bank_name": "RHB Bank",
      "topup_bank_account_number": "20141900035902",
      "topup_bank_created_datetime": "2021-06-09 02:34:50",
      "topup_bank_account_name": "SOO BEDSHEETS ENTERPRISE",
      "topup_bank_status": "active",
      "topup_bank_icon_url": "https://suncity.s3.ap-southeast-1.amazonaws.com/bank/rhb.png",
      "topup_bank_remarks": "RHB7",
      "topup_bank_country": "1",
      "topup_bank_qrcode_url": null,
      "topup_bank_qrcode_status": null
    }
  ],
  "reference": "LTTechtest",
  "accounts": [
    {
      "id": "77",
      "member_id": "21",
      "bank_id": "1",
      "account_number": "2",
      "account_name": "R",
      "created_at": "2022-10-13 08:00:36",
      "updated_at": "2022-10-13 08:00:36",
      "bank_name": "Affin Bank",
      "bank_country": "1",
      "bank_type": "cash",
      "bank_icon_url": "https://suncity.s3.ap-southeast-1.amazonaws.com/bank/affin.png"
    }
  ],
  "walletBalance": "0.00",
  "coinBalance": "24.00",
  "interestBalance": "0.00",
  "topUpMethodList": [
    {
      "setting_id": "2",
      "code": "topup_manual",
      "value": "active",
      "type": "select",
      "group": "topup"
    }
  ],
  "countryList": [
    {
      "country_id": "1",
      "name": "Malaysia",
      "code": "MYR",
      "icon_url": "https://suncity.s3.ap-southeast-1.amazonaws.com/country/MYR-flag.png",
      "status": "active",
      "is_playable": "1",
      "created_at": "2021-12-23 16:54:00",
      "updated_at": null
    }
  ]
} 
*/

  List<ProfileDataResponseOrderTransactions?>? orderTransactions;
  List<ProfileDataResponseWalletTransactions?>? walletTransactions;
  List<ProfileDataResponseGameTransactions?>? gameTransactions;
  List<ProfileDataResponseTopUpBankList?>? topUpBankList;
  String? reference;
  List<ProfileDataResponseAccounts?>? accounts;
  String? walletBalance;
  String? coinBalance;
  String? interestBalance;
  List<ProfileDataResponseTopUpMethodList?>? topUpMethodList;
  List<ProfileDataResponseCountryList?>? countryList;

  ProfileDataResponse({
    this.orderTransactions,
    this.walletTransactions,
    this.gameTransactions,
    this.topUpBankList,
    this.reference,
    this.accounts,
    this.walletBalance,
    this.coinBalance,
    this.interestBalance,
    this.topUpMethodList,
    this.countryList,
  });
  ProfileDataResponse.fromJson(Map<String, dynamic> json) {
    if (json['orderTransactions'] != null) {
      final v = json['orderTransactions'];
      final arr0 = <ProfileDataResponseOrderTransactions>[];
      v.forEach((v) {
        arr0.add(ProfileDataResponseOrderTransactions.fromJson(v));
      });
      orderTransactions = arr0;
    }
    if (json['walletTransactions'] != null) {
      final v = json['walletTransactions'];
      final arr0 = <ProfileDataResponseWalletTransactions>[];
      v.forEach((v) {
        arr0.add(ProfileDataResponseWalletTransactions.fromJson(v));
      });
      walletTransactions = arr0;
    }
    if (json['gameTransactions'] != null) {
      final v = json['gameTransactions'];
      final arr0 = <ProfileDataResponseGameTransactions>[];
      v.forEach((v) {
        arr0.add(ProfileDataResponseGameTransactions.fromJson(v));
      });
      gameTransactions = arr0;
    }
    if (json['topUpBankList'] != null) {
      final v = json['topUpBankList'];
      final arr0 = <ProfileDataResponseTopUpBankList>[];
      v.forEach((v) {
        arr0.add(ProfileDataResponseTopUpBankList.fromJson(v));
      });
      topUpBankList = arr0;
    }
    reference = json['reference']?.toString();
    if (json['accounts'] != null) {
      final v = json['accounts'];
      final arr0 = <ProfileDataResponseAccounts>[];
      v.forEach((v) {
        arr0.add(ProfileDataResponseAccounts.fromJson(v));
      });
      accounts = arr0;
    }
    walletBalance = json['walletBalance']?.toString();
    coinBalance = json['coinBalance']?.toString();
    interestBalance = json['interestBalance']?.toString();
    if (json['topUpMethodList'] != null) {
      final v = json['topUpMethodList'];
      final arr0 = <ProfileDataResponseTopUpMethodList>[];
      v.forEach((v) {
        arr0.add(ProfileDataResponseTopUpMethodList.fromJson(v));
      });
      topUpMethodList = arr0;
    }
    if (json['countryList'] != null) {
      final v = json['countryList'];
      final arr0 = <ProfileDataResponseCountryList>[];
      v.forEach((v) {
        arr0.add(ProfileDataResponseCountryList.fromJson(v));
      });
      countryList = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (orderTransactions != null) {
      final v = orderTransactions;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['orderTransactions'] = arr0;
    }
    if (walletTransactions != null) {
      final v = walletTransactions;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['walletTransactions'] = arr0;
    }
    if (gameTransactions != null) {
      final v = gameTransactions;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['gameTransactions'] = arr0;
    }
    if (topUpBankList != null) {
      final v = topUpBankList;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['topUpBankList'] = arr0;
    }
    data['reference'] = reference;
    if (accounts != null) {
      final v = accounts;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['accounts'] = arr0;
    }
    data['walletBalance'] = walletBalance;
    data['coinBalance'] = coinBalance;
    data['interestBalance'] = interestBalance;
    if (topUpMethodList != null) {
      final v = topUpMethodList;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['topUpMethodList'] = arr0;
    }
    if (countryList != null) {
      final v = countryList;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['countryList'] = arr0;
    }
    return data;
  }
}

class ProfileData {
/*
{
  "msg": null,
  "response": {
    "orderTransactions": [
      {
        "topup_id": "44734",
        "wallet_id": "25663",
        "topup_amount": "50.00",
        "topup_amount_previous": "0.00",
        "topup_amount_balance": "50.00",
        "topup_datetime": "2022-11-14 13:40:57",
        "update_datetime": null,
        "topup_status": "pending",
        "promo_id": null,
        "topup_receipt_url": "1",
        "topup_remarks": null,
        "topup_bank_id": "1",
        "topup_number": "DIRECT221114014057731080",
        "topup_type": "bank",
        "done_by_admin_id": null,
        "done_by_admin_name": null,
        "topup_direct_param": null,
        "topup_direct_response": null,
        "topup_unique_key": null,
        "topup_original_amount": null,
        "topup_conversion_rate": null,
        "topup_service_charge": null,
        "topup_owner_name": null,
        "topup_method": null,
        "topup_receipt": null,
        "transaction_datetime": "2022-11-14 13:40:57",
        "topupBankName": null,
        "topupBankNo": null,
        "topupBank": null,
        "transaction_currency": "THB"
      }
    ],
    "walletTransactions": [
      {
        "transaction_id": "1104643",
        "transaction_amount": "0.00",
        "transaction_amount_previous": "0.00",
        "transaction_amount_balance": "0.00",
        "transaction_type": "gameInRefund",
        "wallet_id": "25663",
        "transaction_status": "active",
        "transaction_created_datetime": "2022-11-20 15:44:10",
        "transaction_remark": "Member Deposit Failed credit to JDBFISHSystem Auto Refund",
        "transaction_method": "Manual",
        "withdraw_status": null,
        "withdraw_update_datetime": null,
        "transaction_number": "GF221120034410883560",
        "transaction_unique_key": "nwCqO5G7qVO454kuY0fejb87rXAEwcZkwQErFS9qVCww4AzRsYfEns8QjPDlnVWjGYgTiizPbz2Ca806JKxGKynwKmVs8MZl3horbxT9xN3WHHw3Gr7OhmdnuLwGXpoIXzB5V3w4VkhtIjgHD1IB5Hvu7nKVSGEUyBaPhgXdoWK2gWydr7cDDuNbDFfFrn6o2V6oVyz7",
        "member_product_id": null,
        "transaction_money_type": "money",
        "transfer_fromto_member_id": null,
        "transfer_fromto_member_name": null,
        "transfer_fromto_shareholder_id": null,
        "transfer_fromto_shareholder_name": null,
        "done_by_admin_name": null,
        "done_by_admin_id": null,
        "done_by_shareholder_id": null,
        "done_by_shareholder_name": null,
        "done_by_member_id": null,
        "done_by_member_name": null,
        "transaction_account_date": null,
        "transaction_flow_type": null,
        "withdraw_bank_id": null,
        "coin_transaction_id": null,
        "transaction_currency": "THB",
        "topup_bank_name": null,
        "topup_bank_account_number": null,
        "topup_bank_remarks": null,
        "topup_bank_holder": null,
        "withdraw_bank_account_id": null,
        "transaction_product_id": null,
        "withdraw_usdt_rate": null,
        "withdraw_usdt_amount": null,
        "product_id": null,
        "transaction_exchange_rate": null,
        "transaction_exchange_from": null,
        "transaction_exchange_to": null,
        "transaction_amount_base": null,
        "product_image_url": "https://xxyyzz112233.s3-ap-southeast-1.amazonaws.com/product/luckytown_logo.png",
        "transfer_fromto_member_avatar_url": null,
        "product_name": "LuckyTown",
        "transaction_owner": "Techtest",
        "jsonClickDetails": {
          "transactionNumber": "GF221120034410883560",
          "transactionAmount": "0.00",
          "transactionTitle": "LuckyTown",
          "transactionImage": "https://xxyyzz112233.s3-ap-southeast-1.amazonaws.com/product/luckytown_logo.png",
          "jsonText": {
            "Currency": "THB",
            "Type": "GameInRefund",
            "Desc": "Member Deposit Failed credit to JDBFISHSystem Auto Refund",
            "Date/Time": "2022-11-20 15:44:10"
          },
          "detailClick": "false",
          "detailJson": null
        }
      }
    ],
    "gameTransactions": [
      {
        "transaction_id": "46816199",
        "game_transaction_valid_stake": "0.2500",
        "transaction_number": "LKYSLOT-K3Lkm1668245003",
        "transaction_remarks": "LKY SLOT",
        "transaction_created_datetime": "2022-11-12 17:22:55",
        "product_image_url": "https://imagedelivery.net/8F4PR10vncj5Q6UoH8dlPg/e1486328-e130-49a4-5827-dcca6bd5f100/public",
        "transaction_amount": "-0.2500"
      }
    ],
    "topUpBankList": [
      {
        "topup_bank_id": "61",
        "topup_bank_name": "RHB Bank",
        "topup_bank_account_number": "20141900035902",
        "topup_bank_created_datetime": "2021-06-09 02:34:50",
        "topup_bank_account_name": "SOO BEDSHEETS ENTERPRISE",
        "topup_bank_status": "active",
        "topup_bank_icon_url": "https://suncity.s3.ap-southeast-1.amazonaws.com/bank/rhb.png",
        "topup_bank_remarks": "RHB7",
        "topup_bank_country": "1",
        "topup_bank_qrcode_url": null,
        "topup_bank_qrcode_status": null
      }
    ],
    "reference": "LTTechtest",
    "accounts": [
      {
        "id": "77",
        "member_id": "21",
        "bank_id": "1",
        "account_number": "2",
        "account_name": "R",
        "created_at": "2022-10-13 08:00:36",
        "updated_at": "2022-10-13 08:00:36",
        "bank_name": "Affin Bank",
        "bank_country": "1",
        "bank_type": "cash",
        "bank_icon_url": "https://suncity.s3.ap-southeast-1.amazonaws.com/bank/affin.png"
      }
    ],
    "walletBalance": "0.00",
    "coinBalance": "24.00",
    "interestBalance": "0.00",
    "topUpMethodList": [
      {
        "setting_id": "2",
        "code": "topup_manual",
        "value": "active",
        "type": "select",
        "group": "topup"
      }
    ],
    "countryList": [
      {
        "country_id": "1",
        "name": "Malaysia",
        "code": "MYR",
        "icon_url": "https://suncity.s3.ap-southeast-1.amazonaws.com/country/MYR-flag.png",
        "status": "active",
        "is_playable": "1",
        "created_at": "2021-12-23 16:54:00",
        "updated_at": null
      }
    ]
  }
} 
*/

  String? msg;
  ProfileDataResponse? response;

  ProfileData({
    this.msg,
    this.response,
  });
  ProfileData.fromJson(Map<String, dynamic> json) {
    msg = json['msg']?.toString();
    response = (json['response'] != null)
        ? ProfileDataResponse.fromJson(json['response'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['msg'] = msg;
    if (response != null) {
      data['response'] = response!.toJson();
    }
    return data;
  }
}
